{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\u\\\\Desktop\\\\webappasgn2\\\\webappdev2-api-labs-2022-rf\\\\reactApp\\\\src\\\\moviesContext.js\";\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport { getMovies } from \"./api/movie-api\";\nexport const MoviesContext = createContext(null);\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      return {\n        movies: action.payload.result\n      };\n    default:\n      return state;\n  }\n};\nconst MoviesContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, {\n    movies: []\n  });\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    getMovies().then(result => {\n      console.log(result);\n      dispatch({\n        type: \"load\",\n        payload: {\n          result\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(MoviesContext.Provider, {\n    value: {\n      movies: state.movies,\n      setAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default MoviesContextProvider;","map":{"version":3,"names":["React","useState","createContext","useEffect","useReducer","getMovies","MoviesContext","reducer","state","action","type","movies","payload","result","MoviesContextProvider","props","dispatch","authenticated","setAuthenticated","then","console","log","children"],"sources":["C:/Users/u/Desktop/webappasgn2/webappdev2-api-labs-2022-rf/reactApp/src/moviesContext.js"],"sourcesContent":["import React, { useState, createContext, useEffect, useReducer } from \"react\";\r\nimport { getMovies } from \"./api/movie-api\";\r\n\r\nexport const MoviesContext = createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"load\":\r\n      return { movies: action.payload.result};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MoviesContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, { movies: []});\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getMovies().then(result => {\r\n      console.log(result);\r\n      dispatch({ type: \"load\", payload: {result}});\r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        setAuthenticated\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,OAAO,MAAMC,aAAa,GAAGJ,aAAa,CAAC,IAAI,CAAC;AAEhD,MAAMK,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,MAAM;MACT,OAAO;QAAEC,MAAM,EAAEF,MAAM,CAACG,OAAO,CAACC;MAAM,CAAC;IACzC;MACE,OAAOL,KAAK;EAAC;AAEnB,CAAC;AAED,MAAMM,qBAAqB,GAAGC,KAAK,IAAI;EACrC,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGZ,UAAU,CAACG,OAAO,EAAE;IAAEI,MAAM,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEzDE,SAAS,CAAC,MAAM;IACdE,SAAS,EAAE,CAACc,IAAI,CAACN,MAAM,IAAI;MACzBO,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;MACnBG,QAAQ,CAAC;QAAEN,IAAI,EAAE,MAAM;QAAEE,OAAO,EAAE;UAACC;QAAM;MAAC,CAAC,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEL,oBACE,oBAAC,aAAa,CAAC,QAAQ;IACrB,KAAK,EAAE;MACLF,MAAM,EAAEH,KAAK,CAACG,MAAM;MACpBO;IACF,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEDH,KAAK,CAACO,QAAQ,CACQ;AAE7B,CAAC;AAED,eAAeR,qBAAqB"},"metadata":{},"sourceType":"module"}